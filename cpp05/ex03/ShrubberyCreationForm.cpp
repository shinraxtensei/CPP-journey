#include "ShrubberyCreationForm.hpp"

ShrubberyCreationForm::ShrubberyCreationForm() : Form("ShrubberyCreationForm", 145, 137)
{
    this->_target = "none";
}


ShrubberyCreationForm::ShrubberyCreationForm(std::string target) : Form("ShrubberyCreationForm", 145, 137)
{
    this->_target = target;
}

// copy constructor
ShrubberyCreationForm::ShrubberyCreationForm(ShrubberyCreationForm const &src) : Form(src)
{
    this->_target = src._target;
}

// assignment operator
ShrubberyCreationForm &ShrubberyCreationForm::operator=(ShrubberyCreationForm const &obj)
{
    Form::operator=(obj);
    this->_target = obj._target;
    return *this;
}

ShrubberyCreationForm::~ShrubberyCreationForm()
{
    std::cout << RED "ShrubberyCreationForm destroyed"  RESET << std::endl;
}


void ShrubberyCreationForm::action() const {
    // draw ascii tree:
    std::ofstream outFile(this->_target + "_shrubbery");
    if (!outFile) {
        std::cerr << "can't open/create" << this->_target + "_shrubbery" << std::endl;
        return ;
    }
    outFile <<
"⠀⠀⢀⣀⣤⣤⡤⠶⠒⠒⠚⠋⠉⠉⠛⠛⠛⠲⠦⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
"⠀⠀⠻⣿⡍⣩⠍⠉⢉⡉⠛⠓⠒⠶⠤⢄⣀⡀⠀⠀⠀⠉⠛⠶⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
"⠀⠀⠀⠈⠛⢷⣄⡶⢋⡐⣿⣷⡄⠀⣀⠔⠀⣉⠝⠓⠢⠤⣄⣀⠀⠉⠻⢦⣄⡀⠀⠀⠀⠀⠀⢀⣠⣤⠶⠟⠛⠋⢉⣀⣀⣠⣤⡤⢤⣤⣀⣈⣉⡛⠓⠦⣤⣀⡀⠀⠀⠀⠀⠀⠀\n"
"⠀⠀⠀⠀⠀⠀⠉⠛⠻⠶⠟⠘⣷⡔⠁⢠⠜⠁⢀⠔⠋⣠⠖⢉⡉⠒⣦⣤⡈⠛⢦⣄⣠⡴⠞⠋⢉⣠⡤⠖⠒⠉⢉⠉⢀⠀⠀⠳⡄⠈⠳⡄⠈⠹⡍⠓⠲⠭⣝⡳⣦⣄⠀⠀⠀\n"
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠻⠷⠶⢿⣇⡀⠋⠠⠔⠫⢊⣉⣈⣛⣸⣻⣶⡿⣿⣀⣤⠚⣏⢱⢠⢷⡀⣷⡈⢧⠀⢧⡀⠀⢱⡀⠀⠙⡄⠀⠹⡄⠀⢳⡀⠹⣟⠺⢿⣦⡀\n"
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣩⣽⡷⠖⠛⠛⠉⠉⠉⢉⣠⣤⠴⢳⡟⣅⢨⣿⣽⣮⣯⣏⢣⢳⢣⠈⢧⠀⠱⡀⠀⢣⠀⠀⠹⡄⠀⢹⡀⠀⢣⠀⠹⡄⠀⢙⣽\n"
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⡶⠞⠋⠁⠀⠀⠀⢀⣠⠴⠚⡍⠁⢰⠀⢲⡼⠀⠈⠙⠲⢄⡈⠉⠙⠿⢶⣭⣧⠈⡆⠀⢳⠀⠈⢧⣄⠀⢳⠀⠈⢷⡿⡞⠀⣀⣥⡶⠋⠁\n"
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⠞⠋⠁⠀⠀⢀⣠⠤⠒⢿⠁⠈⡇⠀⢳⡀⠀⣧⣼⣧⣄⠁⠜⠀⣠⠍⠓⢤⡀⠀⠈⠛⠿⣿⣄⣀⣁⣀⣼⢙⣇⣤⠤⠶⠛⠀⠟⠛⠋⠀⠀⠀⠀\n"
"⠀⠀⠀⠀⠀⠀⠀⢀⣴⠞⠋⠀⠀⠀⣀⣴⡖⠉⢰⡀⠀⠘⡇⠀⢹⡀⠀⣇⣠⣿⣿⣿⣽⣦⣀⠀⠁⢀⡔⠋⠉⠳⣄⠀⠀⠀⠙⢿⡉⠉⠉⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
"⠀⠀⠀⠀⠀⢀⣴⠟⠁⠀⢀⣠⠖⢋⠁⠀⢷⠀⠈⢳⢰⣦⣼⣄⣨⣿⢿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣷⡏⠀⡠⠞⠁⢈⡳⣄⠀⠀⠀⢻⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
"⠀⠀⠀⢀⣴⠟⠁⢀⡤⡞⠉⣆⢀⡀⢣⠀⠀⢧⠀⠈⣸⡇⢈⣿⣿⣻⣼⣿⣻⣾⣿⠻⢿⣿⣗⣿⣿⣧⡘⠁⠀⡤⠋⠀⠈⠳⡄⠀⠀⢻⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
"⠀⠀⣴⠟⣁⡴⠚⡍⠀⢱⡀⠸⡞⣿⣎⠇⣀⣼⡶⠟⠛⣿⡿⣻⣻⣯⣿⣯⣿⣿⠻⣷⣮⣿⣗⢿⣛⡻⣿⣦⣬⢷⣦⠖⠁⣠⠜⢦⠀⠀⠹⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
"⢀⣼⡷⢾⠁⢣⠀⠹⡀⠀⠻⡀⣀⣼⡟⠟⠋⠀⠀⢀⣾⣿⣧⣿⠿⠛⠋⠉⣹⠏⠀⢈⣿⣿⠟⠑⢅⢹⣾⡇⠙⠿⣷⣀⠞⠁⡠⠀⢳⡀⠀⠹⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
"⠻⠧⣼⣤⣇⣈⣧⣤⣥⡴⠾⠛⠋⠁⠀⠀⠀⠀⢠⣾⡿⠛⠋⠀⠀⠀⠀⣰⣿⣤⡴⠛⠉⣿⠃⠀⢤⣽⣿⠁⠀⠀⠀⠙⠻⣾⣠⠄⠀⠹⡄⠀⢻⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
"⠀⠀⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠁⠀⠀⠀⠀⢠⣴⡟⠀⠀⠂⠀⣸⢿⣇⠀⢐⣶⠏⠀⠀⠀⠀⠀⠀⢀⣽⠴⣯⢞⠽⣄⠀⢻⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⠟⠙⠻⠶⢤⡾⣿⠀⢻⣎⣾⡿⠀⠀⠀⠀⠀⠀⠀⠈⠻⠶⣥⣣⠞⠽⣄⠘⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠏⠀⢀⣠⡾⠋⣸⠃⠀⠀⣿⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠓⢦⣭⣶⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣾⠷⠶⠛⢉⡰⠍⢠⡟⠀⠀⠀⠙⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⡿⠻⣤⣀⢀⡠⠍⢀⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⡟⠁⠀⠈⠉⠛⣲⣾⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⠏⠀⢀⣀⣤⡶⠛⢉⣼⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⠷⠚⠛⠉⠁⢸⡓⠀⣼⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⣟⠁⠀⠀⠀⠀⣐⠶⠄⣼⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⡟⠙⠛⠲⠦⣤⣤⣬⡀⣰⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⡟⠀⠀⠀⠀⣀⣤⣼⣿⣿⣿⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⡟⠀⢀⣤⠾⠋⠫⣓⠶⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡿⣠⡼⠋⠀⠀⠀⠒⠢⠄⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⡿⠋⠀⠀⠀⢀⣉⡑⠒⠂⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡿⠶⢤⣄⣀⣀⣐⣶⣮⣭⣥⠴⢿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
"⠀⠀⠀⠀⠀⠀⢀⣀⣠⠤⠤⣼⠇⠀⠀⠀⠀⣀⠀⣀⡀⠀⠀⠀⠈⣿⠐⠒⠢⢤⣠⠞⠛⠓⠢⣄⠀⣀⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
"⠀⠀⠀⠰⠒⠉⠉⠀⠀⠀⠀⢿⠀⠀⠀⠀⠀⢻⡯⢵⣶⣶⡀⠀⠀⠸⣷⠀⠀⠰⡇⠀⠀⠀⢰⠘⣞⡿⣿⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
"⠀⠀⠀⠀⠀⠀⠀⢠⠤⠖⠒⠛⠓⠒⠄⠀⠀⠀⠉⠉⠛⠁⠀⠀⠀⠀⠙⢧⠀⠀⢳⣤⡴⢚⣫⠴⣿⣻⣝⣟⡘⠦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
"⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣾⣿⣿⣿⣿⣶⣿⣿⣿⣿⣷⣶⣾⣷⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶\n"
"⣿⣿⡿⣿⣿⣿⣿⣿⣿⣯⣿⣿⣯⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⡿⠿⡿⢿⣿⣿⣿⣿⣿⣿⣿⡿⠿⣿⣿\n"
"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n"
    << std::endl;
}

